{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sivali\\\\OneDrive\\\\Desktop\\\\Youtube Clone React\\\\vidtube\\\\src\\\\Components\\\\Recommended\\\\Recommended.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Recommended.css';\nimport thumbnail1 from '../../assets/thumbnail1.png';\nimport thumbnail2 from '../../assets/thumbnail2.png';\nimport thumbnail3 from '../../assets/thumbnail3.png';\nimport thumbnail4 from '../../assets/thumbnail4.png';\nimport thumbnail5 from '../../assets/thumbnail5.png';\nimport thumbnail6 from '../../assets/thumbnail6.png';\nimport thumbnail7 from '../../assets/thumbnail7.png';\nimport thumbnail8 from '../../assets/thumbnail8.png';\nimport { API_KEY, value_converter } from '../../data';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommended = ({\n  categoryId\n}) => {\n  _s();\n  const [apiData, setApiData] = useState([]);\n  const relatedVideo_API = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=46&regionCode=US&videoCategoryId=${categoryId}&key=${API_KEY}`;\n  useEffect(() => {\n    fetch(relatedVideo_API).then(res => res.json()).then(data => setApiData(data.items));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommended\",\n    children: apiData.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-video-list\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/video/${item.snippet.categoryId}/${item.id}`,\n          onClick: () => window.scrollTo(0, 0),\n          className: \"small-thumbnail\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.snippet.thumbnails.medium.url,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vid-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: item.snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.snippet.channelTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"recommended-views\",\n            children: \" Views\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommended, \"je+MUHM6O054NUkBxQdd8iIOm5c=\");\n_c = Recommended;\nexport default Recommended;\nvar _c;\n$RefreshReg$(_c, \"Recommended\");","map":{"version":3,"names":["React","useEffect","useState","thumbnail1","thumbnail2","thumbnail3","thumbnail4","thumbnail5","thumbnail6","thumbnail7","thumbnail8","API_KEY","value_converter","Link","jsxDEV","_jsxDEV","Recommended","categoryId","_s","apiData","setApiData","relatedVideo_API","fetch","then","res","json","data","items","className","children","map","item","index","to","snippet","id","onClick","window","scrollTo","src","thumbnails","medium","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","channelTitle","_c","$RefreshReg$"],"sources":["C:/Users/sivali/OneDrive/Desktop/Youtube Clone React/vidtube/src/Components/Recommended/Recommended.js"],"sourcesContent":["import React , {useEffect , useState}from 'react'\r\nimport './Recommended.css' \r\nimport thumbnail1 from '../../assets/thumbnail1.png' \r\nimport thumbnail2 from '../../assets/thumbnail2.png' \r\nimport thumbnail3 from '../../assets/thumbnail3.png' \r\nimport thumbnail4 from '../../assets/thumbnail4.png' \r\nimport thumbnail5 from '../../assets/thumbnail5.png' \r\nimport thumbnail6 from '../../assets/thumbnail6.png' \r\nimport thumbnail7 from '../../assets/thumbnail7.png' \r\nimport thumbnail8 from '../../assets/thumbnail8.png'  \r\nimport { API_KEY , value_converter } from '../../data' \r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Recommended = ({categoryId}) => { \r\n\r\n    const [apiData , setApiData] = useState([]) ; \r\n\r\n    const relatedVideo_API = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=46&regionCode=US&videoCategoryId=${categoryId}&key=${API_KEY}`; \r\n\r\n    useEffect(()=>{\r\n        fetch(relatedVideo_API).then(res=>res.json()).then(data=> setApiData(data.items))\r\n    } , []) \r\n\r\n  return (\r\n    <div className='recommended'> \r\n       {apiData.map((item,index)=>{\r\n        return(\r\n            <div  key={index}  className='side-video-list'>\r\n        <Link to={`/video/${item.snippet.categoryId}/${item.id}`} onClick={()=>window.scrollTo(0,0)} className=\"small-thumbnail\">\r\n                            <img src={item.snippet.thumbnails.medium.url} alt=\"\" /></Link> \r\n        <div className='vid-info'>\r\n            <h4>{item.snippet.title}</h4> \r\n            <p>{item.snippet.channelTitle}</p> \r\n            <p className='recommended-views'>{} Views</p>\r\n        </div>\r\n       </div> \r\n        )\r\n       })}\r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Recommended"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}